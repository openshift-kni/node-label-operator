apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "node-labels.openshift.io/v1beta1",
          "kind": "Labels",
          "metadata": {
            "name": "labels-sample"
          },
          "spec": {
            "labels": {
              "example.openshift.io/foo3": "bar3",
              "test.openshift.io/foo1": "bar1",
              "test.openshift.io/foo2": "bar2"
            },
            "nodeNamePatterns": [
              "worker-0.*"
            ]
          }
        }
      ]
    capabilities: Basic Install
    operators.operatorframework.io/builder: operator-sdk-v1.4.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
  name: node-label-operator.v0.1.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Labels is the Schema for the labels API. Labels define which labels should be added to which nodes.
      displayName: Labels
      kind: Labels
      name: labels.node-labels.openshift.io
      version: v1beta1
    - description: OwnedLabels is the Schema for the ownedlabels API. They define which node labels are owned by this operator and can safely be removed in case no label rule matches anymore.
      displayName: Owned Labels
      kind: OwnedLabels
      name: ownedlabels.node-labels.openshift.io
      version: v1beta1
  description: Operator for labeling nodes based on their names
  displayName: Node Label Operator
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - node-labels.openshift.io
          resources:
          - labels
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - node-labels.openshift.io
          resources:
          - labels/finalizers
          verbs:
          - update
        - apiGroups:
          - node-labels.openshift.io
          resources:
          - labels/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - node-labels.openshift.io
          resources:
          - ownedlabels
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - node-labels.openshift.io
          resources:
          - ownedlabels/finalizers
          verbs:
          - update
        - apiGroups:
          - node-labels.openshift.io
          resources:
          - ownedlabels/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: default
      deployments:
      - name: node-label-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --leader-elect
                command:
                - /manager
                image: quay.io/openshift-kni/node-label-operator:latest
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 100m
                    memory: 30Mi
                  requests:
                    cpu: 100m
                    memory: 20Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          - coordination.k8s.io
          resources:
          - configmaps
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: default
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - node
  - labels
  links:
  - name: Node Label Operator
    url: https://github.com/openshift-kni/node-label-operator
  maintainers:
  - email: kni-lifecycle-team@redhat.com
    name: KNI Lifecycle Team
  maturity: alpha
  provider:
    name: Red Hat
    url: https://www.redhat.com
  version: 0.1.0
  webhookdefinitions:
  - admissionReviewVersions:
    - v1
    - v1beta1
    containerPort: 443
    deploymentName: node-label-operator-controller-manager
    failurePolicy: Ignore
    generateName: mnode.kb.io
    rules:
    - apiGroups:
      - ""
      apiVersions:
      - v1
      operations:
      - CREATE
      resources:
      - nodes
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /label-v1-nodes
